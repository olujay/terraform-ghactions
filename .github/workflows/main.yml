# This is a basic workflow to help you get started with Actions

name: Terraform GithubAction Demo

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
        ARM_SUBSCRIPTION_ID: "f7f0898d-67ae-4321-9f20-dbfca785a349"
        ARM_TENANT_ID: "62bc9175-ce82-4a0b-8750-fdc2028c2a28"
        ARM_CLIENT_ID: "90f0818b-6901-4ed1-939a-c6466519e5f4"
        ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
        AZURE_STORAGE: 'terraformstate2408123'
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Azure Login
        uses: Azure/login@v1
        with:
              # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{AZURE_CREDENTIALS}} 

      # Runs a single command using the runners shell
      - name: Build Terraform state
        run: chmod +x ./tfstate.sh && ./tfstate.sh ${{env.AZURE_STORAGE}}
        
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
      - name: Terraform init
        run: terraform init -backend-config='storage_account_name=${{env.AZURE_STORAGE}}'
        
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        run: terraform apply tfplan
      
  
